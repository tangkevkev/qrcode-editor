{"version":3,"sources":["UI/QR-Editor.tsx","UI/SingleEditor.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["qrCode","QRCodeStyling","width","height","image","dotsOptions","color","type","imageOptions","crossOrigin","margin","QREditor","props","useState","fileExt","setFileExt","ref","useRef","useEffect","append","current","update","data","content","length","className","style","styles","inputWrapper","onChange","event","target","value","onClick","download","extension","display","justifyContent","inputBox","flexGrow","marginRight","useStyles","makeStyles","theme","root","spacing","box","borderStyle","rootGrid","paper","padding","textAlign","palette","text","secondary","heading","fontSize","typography","pxToRem","flexBasis","flexShrink","secondaryHeading","SingleEditor","classes","t","useTranslation","imageSrc","setContent","subTitle","setSubtitle","setColor","Grid","container","direction","alignContent","justify","Paper","elevation","item","noValidate","autoComplete","TextField","id","multiline","maxRows","label","Accordion","defaultExpanded","AccordionSummary","expandIcon","aria-controls","Typography","AccordionDetails","colors","hex","triangle","App","React","setValue","Fragment","square","Tabs","indicatorColor","textColor","centered","newValue","console","log","aria-label","Tab","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.472d68f1.chunk.js","sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\r\nimport QRCodeStyling from \"qr-code-styling\";\r\n\r\n\r\n\r\ninterface QRProps {\r\n  content: string,\r\n  color?: string,\r\n  imageSrc?: string,\r\n  subTitle?: string,\r\n}\r\n\r\nconst qrCode = new QRCodeStyling({\r\n  width: 250,\r\n  height: 250,\r\n  image:\r\n    \"https://upload.wikimedia.org/wikipedia/commons/5/51/Facebook_f_logo_%282019%29.svg\",\r\n  dotsOptions: {\r\n    color: \"#4267b2\",\r\n    type: \"square\"\r\n  },\r\n  imageOptions: {\r\n    crossOrigin: \"anonymous\",\r\n    margin: 5\r\n  }\r\n});\r\n\r\nexport default function QREditor(props: QRProps) {\r\n  const [fileExt, setFileExt] = useState(\"png\");\r\n  const ref = useRef(null);\r\n\r\n  useEffect(() => {\r\n    qrCode.append(ref.current as any);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    qrCode.update({\r\n      data: (props.content.length == 0) ? \"empty\" : props.content\r\n    });\r\n  }, [props.content]);\r\n\r\n  useEffect(() => {\r\n    qrCode.update({\r\n      dotsOptions: {\r\n        color: props.color\r\n      }\r\n    });\r\n  }, [props.color]);\r\n\r\n\r\n  const onExtensionChange = (event: any) => {\r\n    setFileExt(event.target.value);\r\n  };\r\n\r\n  const onDownloadClick = () => {\r\n    qrCode.download({\r\n      extension: fileExt as any\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <div style={styles.inputWrapper}>\r\n        <select onChange={onExtensionChange} value={fileExt}>\r\n          <option value=\"png\">PNG</option>\r\n          <option value=\"jpeg\">JPEG</option>\r\n          <option value=\"webp\">WEBP</option>\r\n        </select>\r\n        <button onClick={onDownloadClick}>Download</button>\r\n      </div>\r\n      <div ref={ref} />\r\n    </div>\r\n  );\r\n}\r\n\r\nconst styles = {\r\n  inputWrapper: {\r\n    margin: \"20px 0\",\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    width: \"100%\"\r\n  },\r\n  inputBox: {\r\n    flexGrow: 1,\r\n    marginRight: 20\r\n  }\r\n};\r\n","import './../App.css';\r\nimport { useState } from \"react\";\r\nimport QREditor from './QR-Editor'\r\nimport { Button } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { BlockPicker } from 'react-color'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { useTranslation } from 'react-i18next';\r\nimport Accordion from '@material-ui/core/Accordion';\r\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\r\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    '& > *': {\r\n      margin: theme.spacing(1),\r\n      width: '25ch',\r\n    },\r\n  },\r\n  box: {\r\n    borderStyle: 'solid',\r\n  },\r\n  rootGrid: {\r\n    flexGrow: 1,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: 'center',\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    flexBasis: '33.33%',\r\n    flexShrink: 0,\r\n  },\r\n  secondaryHeading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    color: 'gray',\r\n  },\r\n}));\r\n\r\n\r\nfunction SingleEditor() {\r\n\r\n  const classes = useStyles();\r\n  const { t, } = useTranslation();\r\n\r\n  const DEFAULT_IMAGE_SRC = \"\"\r\n  const DEFAULT_USE_IMAGE = false\r\n  const DEFAULT_CONTENT = \"\"\r\n  const DEFAULT_COLOR = \"\"\r\n\r\n  const [imageSrc, setImageSrc] = useState(\"\")\r\n  const [useImage, setUseImage] = useState(false)\r\n  const [content, setContent] = useState(\"google.ch\")\r\n  const [subTitle, setSubtitle] = useState(\"\")\r\n  const [color, setColor] = useState(\"#000000\")\r\n\r\n\r\n  function reset() {\r\n    setImageSrc(DEFAULT_IMAGE_SRC)\r\n    setUseImage(DEFAULT_USE_IMAGE)\r\n    setContent(DEFAULT_CONTENT)\r\n    setColor(DEFAULT_COLOR)\r\n  }\r\n\r\n\r\n  return (\r\n    <div className={`${classes.rootGrid}`}>\r\n      <Grid container spacing={2}\r\n        direction=\"row\"\r\n        alignContent=\"center\"\r\n        justify=\"center\">\r\n\r\n        <Paper elevation={4}>\r\n\r\n\r\n          <Grid item>\r\n            <form className={classes.root} noValidate autoComplete=\"off\">\r\n              <TextField id=\"standard-basic\"\r\n                multiline={true}\r\n                maxRows={3}\r\n                label=\"QR Content\"\r\n                onChange={(event) => { setContent(event.target.value) }}\r\n                value={content}\r\n              />\r\n            </form>\r\n            <form className={classes.root} noValidate autoComplete=\"off\">\r\n              <TextField id=\"standard-basic\"\r\n                label=\"Subtitle [Optional]\"\r\n                onChange={(event) => { setSubtitle(event.target.value) }}\r\n                value={subTitle}\r\n              />\r\n            </form>\r\n            <Accordion defaultExpanded={true}>\r\n              <AccordionSummary\r\n                expandIcon={<ExpandMoreIcon />}\r\n                aria-controls=\"panel1bh-content\"\r\n                id=\"panel1bh-header\"\r\n              >\r\n                <Typography className={classes.heading}>{t(\"Color\")}</Typography>\r\n                <Typography className={classes.secondaryHeading}>{\"[\" + t(\"Optional\") + \"]\"}</Typography>\r\n              </AccordionSummary>\r\n              <AccordionDetails>\r\n                <div className=\"flex-container\">\r\n                  <BlockPicker\r\n                    color={color}\r\n                    colors={['#000000', '#808080', '#FF0000',\r\n                      '#FFD800', '#4CFF00', '#00FFFF',\r\n                      '#0094FF', '#0026FF', '#FF7FED', '#007F0E']}\r\n                    onChange={(event) => setColor(event.hex)} triangle={'hide'} />\r\n                </div>\r\n              </AccordionDetails>\r\n            </Accordion>\r\n          </Grid>\r\n        </Paper>\r\n\r\n\r\n\r\n        <Grid item>\r\n          <QREditor content={content} color={color} imageSrc={imageSrc} subTitle={subTitle} />\r\n        </Grid>\r\n\r\n      </Grid>\r\n\r\n    </div>\r\n  );\r\n}\r\nexport default SingleEditor;\r\n//          <QREditor content={content} color={color} imageSrc={imageSrc} subTitle={subTitle} />\r\n","import React from 'react';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport SingleEditor from './UI/SingleEditor';\r\n\r\n\r\nconst SINGLE_EDITOR_INDEX = 0\r\nconst MULTIPLE_EDITOR_INDEX = 1\r\n\r\nexport default function App() {\r\n  const [value, setValue] = React.useState(0);\r\n\r\n  const handleChange = (event: React.ChangeEvent<{}>, newValue: number) => {\r\n    console.log(\"New value: \" + newValue)\r\n    setValue(newValue);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Paper square>\r\n        <Tabs\r\n          value={value}\r\n          indicatorColor=\"primary\"\r\n          textColor=\"primary\"\r\n          centered={true}\r\n          onChange={handleChange}\r\n          aria-label=\"disabled tabs example\"\r\n        >\r\n          <Tab label=\"Single Editor\" value={SINGLE_EDITOR_INDEX} />\r\n          <Tab label=\"Active\" value={MULTIPLE_EDITOR_INDEX} />\r\n        </Tabs>\r\n      </Paper>\r\n      <br/>\r\n      {value == SINGLE_EDITOR_INDEX && <SingleEditor />}\r\n    </React.Fragment>\r\n  );\r\n}","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}
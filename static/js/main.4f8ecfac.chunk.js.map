{"version":3,"sources":["UI/QR-Editor.tsx","UI/SingleEditor.tsx","title_2.png","App.tsx","reportWebVitals.ts","index.tsx"],"names":["useStyles","makeStyles","theme","createStyles","formControl","margin","spacing","minWidth","selectEmpty","marginTop","button","box","borderStyle","rootGrid","flexGrow","paper","padding","textAlign","color","palette","text","secondary","heading","fontSize","typography","pxToRem","flexBasis","flexShrink","secondaryHeading","qrCode","QRCodeStyling","width","height","type","dotsOptions","imageOptions","crossOrigin","cornersSquareOptions","OldQREditor","props","useState","fileExt","setFileExt","setCanvasInit","setColor","colorCorner","setColorCorner","showTools","setShowTools","ref","useRef","classes","t","useTranslation","useEffect","append","current","console","log","update","data","content","length","className","onClick","e","target","HTMLCanvasElement","style","styles","inputWrapper","FormControl","InputLabel","id","Select","labelId","value","onChange","event","MenuItem","Button","download","extension","startIcon","Fade","in","timeout","Grid","container","direction","alignItems","justifyContent","item","Paper","elevation","colors","hex","triangle","display","inputBox","marginRight","backdrop","zIndex","drawer","root","maxWidth","breakpoints","between","input","marginLeft","flex","iconButton","divider","SingleEditor","EXAMPLE_CONTENT","imageSrc","tempContent","setTempContent","setContent","subTitle","showQR","setShowQR","xs","component","TextField","label","variant","maxRows","App","React","src","logo","alt","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4f8ecfac.chunk.js","sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\r\nimport QRCodeStyling, { cornerDotTypes, cornerSquareTypes } from \"qr-code-styling\";\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\r\nimport Button from \"@material-ui/core/Button\";\r\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { BlockPicker } from 'react-color'\r\nimport Fade from '@material-ui/core/Fade';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\n\r\n\r\n\r\ninterface QRProps {\r\n  content: string,\r\n  color?: string,\r\n  colorCorner?: string,\r\n  imageSrc?: string,\r\n  subTitle?: string,\r\n  onClickQR?: Function,\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    formControl: {\r\n      margin: theme.spacing(1),\r\n      minWidth: 120,\r\n    },\r\n    selectEmpty: {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n    button: {\r\n      margin: theme.spacing(1),\r\n    },\r\n\r\n    box: {\r\n      borderStyle: 'solid',\r\n    },\r\n    rootGrid: {\r\n      flexGrow: 1,\r\n    },\r\n    paper: {\r\n      padding: theme.spacing(2),\r\n      textAlign: 'center',\r\n      color: theme.palette.text.secondary,\r\n    },\r\n    heading: {\r\n      fontSize: theme.typography.pxToRem(15),\r\n      flexBasis: '33.33%',\r\n      flexShrink: 0,\r\n    },\r\n    secondaryHeading: {\r\n      fontSize: theme.typography.pxToRem(15),\r\n      color: 'gray',\r\n    },\r\n  }),\r\n);\r\n\r\n// image: \"https://upload.wikimedia.org/wikipedia/commons/5/51/Facebook_f_logo_%282019%29.svg\",\r\n \r\n\r\nconst qrCode = new QRCodeStyling({\r\n  width: 250,\r\n  height: 250,\r\n  type: 'canvas',\r\n  dotsOptions: {\r\n    color: \"#4267b2\",\r\n    type: \"square\"\r\n  },\r\n  imageOptions: {\r\n    crossOrigin: \"anonymous\",\r\n    margin: 5\r\n  },\r\n  cornersSquareOptions: {\r\n    color: \"#FFD800\",\r\n    type: \"square\"\r\n  }\r\n\r\n\r\n\r\n});\r\n\r\nexport default function OldQREditor(props: QRProps) {\r\n  const [fileExt, setFileExt] = useState(\"png\");\r\n  const [canvasInit, setCanvasInit] = useState(false)\r\n  const [content, setContent] = useState(\"google.ch\")\r\n  const [subTitle, setSubtitle] = useState(\"\")\r\n  const [color, setColor] = useState(\"#000000\")\r\n  const [colorCorner, setColorCorner] = useState(\"#000000\")\r\n  const [imageSrc, setImageSrc] = useState(\"\")\r\n  const [useImage, setUseImage] = useState(false)\r\n  const [showTools, setShowTools] = useState(false)\r\n\r\n  const ref = useRef(null);\r\n  const classes = useStyles();\r\n  const { t, } = useTranslation();\r\n\r\n\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    qrCode.append(ref.current as any);\r\n    console.log(\"Append\")\r\n\r\n\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    qrCode.update({\r\n      data: (props.content.length == 0) ? \"empty\" : props.content\r\n    });\r\n    setCanvasInit(false)\r\n  }, [props.content]);\r\n\r\n  useEffect(() => {\r\n    qrCode.update({\r\n      dotsOptions: {\r\n        color: color\r\n      }\r\n    });\r\n  }, [color]);\r\n\r\n  useEffect(() => {\r\n    qrCode.update({\r\n      cornersSquareOptions: {\r\n        color: colorCorner\r\n      }\r\n    });\r\n  }, [colorCorner]);\r\n\r\n\r\n  const onExtensionChange = (event: any) => {\r\n    setFileExt(event.target.value);\r\n  };\r\n\r\n  const onDownloadClick = () => {\r\n    qrCode.download({\r\n      extension: fileExt as any\r\n    });\r\n\r\n  };\r\n\r\n\r\n  return (\r\n    <div className=\"QR-Code\">\r\n\r\n      <div ref={ref} className=\"App\" onClick={(e: React.MouseEvent) => {\r\n        if (e.target instanceof HTMLCanvasElement) {\r\n          setShowTools(!showTools)\r\n        }\r\n\r\n      }\r\n      } />\r\n\r\n      <div style={styles.inputWrapper}>\r\n\r\n        <FormControl className={classes.formControl}>\r\n\r\n          <InputLabel id=\"demo-simple-select-filled-label\">Extension</InputLabel>\r\n          <Select\r\n            labelId=\"demo-simple-select-filled-label\"\r\n            id=\"demo-simple-select-filled\"\r\n            value={fileExt}\r\n            onChange={onExtensionChange}\r\n          >\r\n            <MenuItem value={\"png\"}>PNG</MenuItem>\r\n            <MenuItem value={\"jpeg\"}>JPEG</MenuItem>\r\n            <MenuItem value={\"webp\"}>WEBP</MenuItem>\r\n          </Select>\r\n\r\n        </FormControl>\r\n        <Button\r\n          color=\"default\"\r\n          onClick={onDownloadClick}\r\n          className={classes.button}\r\n          startIcon={<ArrowDownwardIcon />}\r\n        >\r\n          {t(\"Download\")}\r\n        </Button>\r\n\r\n      </div>\r\n      {!showTools &&\r\n        <Fade in={!showTools} timeout={1000}>\r\n          <Button\r\n            color=\"primary\"\r\n            onClick={() => { setShowTools(!showTools) }}\r\n            className={classes.button}\r\n            startIcon={<EditIcon />}\r\n          >\r\n            {t(\"Edit\")}\r\n          </Button>\r\n        </Fade>\r\n      }\r\n      {showTools &&\r\n        <Fade in={showTools} timeout={1000}>\r\n          <Button\r\n            color=\"primary\"\r\n            onClick={() => { setShowTools(!showTools) }}\r\n            className={classes.button}\r\n            startIcon={<CloseIcon />\r\n            }\r\n          >\r\n            {t(\"Close\")}\r\n          </Button>\r\n        </Fade>\r\n      }\r\n      <Fade in={showTools} timeout={1000}>\r\n        <div className=\"background\">\r\n          <Grid container spacing={3}\r\n            direction=\"row\"\r\n            alignItems=\"center\"\r\n            justifyContent=\"center\"\r\n          >\r\n            <Grid item >\r\n              <div className=\"flex-container\">\r\n                <Paper elevation={4}>\r\n                  <div className=\"Paper-header\">\r\n                    <h3>{t(\"Color\")}</h3>\r\n                  </div>\r\n                  <BlockPicker\r\n                    color={color}\r\n                    colors={['#000000', '#808080', '#FF0000',\r\n                      '#FFD800', '#4CFF00', '#00FFFF',\r\n                      '#0094FF', '#0026FF', '#FF7FED', '#007F0E']}\r\n                    onChange={(event) => setColor(event.hex)} triangle={'hide'} />\r\n                </Paper>\r\n\r\n              </div>\r\n            </Grid>\r\n            <Grid item>\r\n              <Paper elevation={4}>\r\n                <div className=\"Paper-header\">\r\n                  <h3>{t(\"Corner Color\")}</h3>\r\n                </div>\r\n                <div className=\"flex-container\">\r\n                  <BlockPicker\r\n                    color={colorCorner}\r\n                    colors={['#000000', '#808080', '#FF0000',\r\n                      '#FFD800', '#4CFF00', '#00FFFF',\r\n                      '#0094FF', '#0026FF', '#FF7FED', '#007F0E']}\r\n                    onChange={(event) => setColorCorner(event.hex)} triangle={'hide'} />\r\n                </div>\r\n              </Paper>\r\n            </Grid>\r\n            <Grid item>\r\n              <Paper elevation={4}>\r\n                <div className=\"Paper-header\">\r\n                  <h3>{t(\"Icon\")}</h3>\r\n                </div>\r\n                <div className=\"flex-container\">\r\n                  <BlockPicker\r\n                    color={colorCorner}\r\n                    colors={['#000000', '#808080', '#FF0000',\r\n                      '#FFD800', '#4CFF00', '#00FFFF',\r\n                      '#0094FF', '#0026FF', '#FF7FED', '#007F0E']}\r\n                    onChange={(event) => setColorCorner(event.hex)} triangle={'hide'} />\r\n                </div>\r\n              </Paper>\r\n            </Grid>\r\n          </Grid>\r\n        </div >\r\n\r\n      </Fade >\r\n    </div >\r\n\r\n  );\r\n}\r\n\r\nconst styles = {\r\n  inputWrapper: {\r\n    margin: \"5px 0\",\r\n    display: \"block\",\r\n\r\n    justifyContent: \"center\",\r\n    width: \"100%\"\r\n  },\r\n  inputBox: {\r\n    flexGrow: 1,\r\n    marginRight: 20\r\n  }\r\n};\r\n","import './../App.css';\r\nimport { useState } from \"react\";\r\nimport QREditor from './QR-Editor'\r\nimport { Button } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { BlockPicker } from 'react-color'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { useTranslation } from 'react-i18next';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport Grow from '@material-ui/core/Grow';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  backdrop: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    color: '#fff',\r\n  },\r\n  box: {\r\n    borderStyle: 'solid',\r\n  },\r\n  rootGrid: {\r\n    flexGrow: 1,\r\n    margin: 3,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: 'center',\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    flexBasis: '33.33%',\r\n    flexShrink: 0,\r\n  },\r\n\r\n  root: {\r\n    padding: '2px 4px',\r\n    display: 'flex',\r\n    maxWidth: 600,\r\n    minWidth: 300,\r\n    width: 600,\r\n    [theme.breakpoints.between(0, 600)]: {\r\n      width: \"100%\"\r\n    }\r\n\r\n\r\n  },\r\n  input: {\r\n    marginLeft: theme.spacing(1),\r\n    flex: 1,\r\n  },\r\n  iconButton: {\r\n    padding: 10,\r\n  },\r\n  divider: {\r\n    height: 28,\r\n    margin: 4,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(2),\r\n\r\n\r\n  },\r\n}));\r\n\r\n\r\nexport default function SingleEditor() {\r\n\r\n  const classes = useStyles();\r\n  const { t, } = useTranslation();\r\n\r\n  const DEFAULT_IMAGE_SRC = \"\"\r\n  const DEFAULT_USE_IMAGE = false\r\n  const DEFAULT_CONTENT = \"\"\r\n  const DEFAULT_COLOR = \"\"\r\n  const EXAMPLE_CONTENT = \"www.qrcode-maker.io\"\r\n\r\n  const [imageSrc, setImageSrc] = useState(\"\")\r\n  const [useImage, setUseImage] = useState(false)\r\n  const [tempContent, setTempContent] = useState(\"\")\r\n  const [content, setContent] = useState(\"\")\r\n  const [subTitle, setSubtitle] = useState(\"\")\r\n  const [color, setColor] = useState(\"#000000\")\r\n  const [colorCorner, setColorCorner] = useState(\"#000000\")\r\n  const [showQR, setShowQR] = useState(false)\r\n  const [open, setOpen] = useState(false);\r\n\r\n\r\n\r\n\r\n  function reset() {\r\n    setImageSrc(DEFAULT_IMAGE_SRC)\r\n    setUseImage(DEFAULT_USE_IMAGE)\r\n    setContent(DEFAULT_CONTENT)\r\n    setColor(DEFAULT_COLOR)\r\n  }\r\n\r\n\r\n  return (\r\n    <div className={`${classes.rootGrid}`}>\r\n\r\n      <Grid item xs={12}>\r\n        <Paper component=\"form\" >\r\n          <TextField id=\"outlined-basic\"\r\n            label={t(\"QR Content\")}\r\n            variant=\"outlined\"\r\n            className={classes.root}\r\n            value={tempContent}\r\n            maxRows={3}\r\n            onChange={\r\n              (event: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>) => {\r\n                setTempContent(event.target.value)\r\n              }}\r\n\r\n          />\r\n        </Paper>\r\n      </Grid>\r\n\r\n      <Grid item xs={12}\r\n        container\r\n        direction=\"row\"\r\n        alignItems=\"center\"\r\n        justifyContent=\"center\"\r\n      >\r\n        <Grid item>\r\n          <Button\r\n            variant=\"outlined\"\r\n            color=\"default\"\r\n            className={classes.button}\r\n            onClick={() => {\r\n              setContent(tempContent)\r\n              setShowQR(true)\r\n            }}\r\n          >\r\n            {t(\"Generate\")}\r\n          </Button>\r\n        </Grid>\r\n        <Grid item>\r\n          <Button\r\n            variant=\"outlined\"\r\n            color=\"primary\"\r\n            className={classes.button}\r\n            onClick={() => {\r\n              setTempContent(EXAMPLE_CONTENT);\r\n              setContent(EXAMPLE_CONTENT)\r\n              setShowQR(true)\r\n            }}\r\n          >\r\n            {t(\"Example\")}\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n      {showQR &&\r\n        <Grid item xs={12}>\r\n          <QREditor content={content}\r\n            color={color}\r\n            imageSrc={imageSrc}\r\n            subTitle={subTitle}\r\n            colorCorner={colorCorner}\r\n\r\n          />\r\n\r\n        </Grid>\r\n      }\r\n\r\n\r\n    </div >\r\n  );\r\n}\r\n  /** <InputBase\r\nclassName={classes.input}\r\nplaceholder=\"QR content\"\r\nvalue={tempContent}\r\nonChange={(event: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>) => { setTempContent(event.target.value) }}\r\ninputProps={{ 'aria-label': 'QR Code' }}\r\n/> */\r\n","export default __webpack_public_path__ + \"static/media/title_2.383ab8fc.png\";","import React from 'react';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport SingleEditor from './UI/SingleEditor';\r\nimport Profile from './UI/Profiles';\r\nimport logo from './title_2.png';\r\nimport './App.css'\r\nimport { Grid } from '@material-ui/core';\r\n\r\n\r\nconst SINGLE_EDITOR_INDEX = 0\r\nconst MULTIPLE_EDITOR_INDEX = 1\r\n\r\nexport default function App() {\r\n  const [value, setValue] = React.useState(0);\r\n\r\n  const handleChange = (event: React.ChangeEvent<{}>, newValue: number) => {\r\n    console.log(\"New value: \" + newValue)\r\n    setValue(newValue);\r\n  };\r\n\r\n  return (\r\n    <div className=\"No-Scroll \">\r\n      <Grid container spacing={3}\r\n        direction=\"column\"\r\n        alignItems=\"center\"\r\n        justifyContent=\"center\"\r\n      >\r\n        <Grid item xs={12}>\r\n          <div className=\"App-header\">\r\n            <img src={logo} alt=\"logo\" className=\"Title-image\" />\r\n          </div>\r\n        </Grid>\r\n        \r\n        <SingleEditor />\r\n\r\n      </Grid>\r\n    </div >\r\n  );\r\n}\r\n/**\r\n *     <Paper square>\r\n        <Tabs\r\n          value={value}\r\n          indicatorColor=\"primary\"\r\n          textColor=\"primary\"\r\n          centered={true}\r\n          onChange={handleChange}\r\n          aria-label=\"disabled tabs example\"\r\n        >\r\n          <Tab label=\"Single Editor\" value={SINGLE_EDITOR_INDEX} />\r\n          <Tab label=\"Active\" value={MULTIPLE_EDITOR_INDEX} />\r\n        </Tabs>\r\n      </Paper>\r\n */","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport Start from './UI/Start';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}